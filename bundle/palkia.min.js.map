{
  "version": 3,
  "sources": [
    "../arceus/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/Users/stephen/code/stephenbunch/palkia/node_modules/classlist-polyfill/src/index.js",
    "/Users/stephen/code/stephenbunch/palkia/node_modules/scriptjs/dist/script.js",
    "/Users/stephen/code/stephenbunch/palkia/src/browser/AmdResolver.js",
    "/Users/stephen/code/stephenbunch/palkia/src/browser/GLOBAL.js",
    "/Users/stephen/code/stephenbunch/palkia/src/browser/WebBundle.js",
    "/Users/stephen/code/stephenbunch/palkia/src/browser/index.js",
    "/Users/stephen/code/stephenbunch/palkia/src/browser/util/fontIsLoaded.js",
    "/Users/stephen/code/stephenbunch/palkia/src/browser/util/hrefForGoogleFont.js",
    "/Users/stephen/code/stephenbunch/palkia/src/browser/util/loadFontAsync.js",
    "/Users/stephen/code/stephenbunch/palkia/src/browser/util/loadScriptAsync.js",
    "/Users/stephen/code/stephenbunch/palkia/src/browser/util/loadStyle.js",
    "/Users/stephen/code/stephenbunch/palkia/src/browser/util/loadStyleAsync.js",
    "/Users/stephen/code/stephenbunch/palkia/src/browser/util/moveStyleToTop.js",
    "/Users/stephen/code/stephenbunch/palkia/src/browser/util/styleIsLoaded.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/Bundle.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/Component.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/InvalidOperationError.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/Kernel.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/LazyResolver.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/Linker.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/OptionalLocalResolver.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/OptionalResolver.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/Recipe.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/Registry.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/ServiceNotFoundError.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/index.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/util/arrayFromTarget.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/util/combinePaths.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/util/distinct.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/util/index.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/util/matchFromPattern.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/util/recipeFromTarget.js",
    "/Users/stephen/code/stephenbunch/palkia/src/common/util/validateTarget.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "/*\n * classList.js: Cross-browser full element.classList implementation.\n * 2014-07-23\n *\n * By Eli Grey, http://eligrey.com\n * Public Domain.\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\n\n/* Copied from MDN:\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/classList\n */\n\nif (\"document\" in window.self) {\n\n  // Full polyfill for browsers with no classList support\n  if (!(\"classList\" in document.createElement(\"_\"))) {\n\n  (function (view) {\n\n    \"use strict\";\n\n    if (!('Element' in view)) return;\n\n    var\n        classListProp = \"classList\"\n      , protoProp = \"prototype\"\n      , elemCtrProto = view.Element[protoProp]\n      , objCtr = Object\n      , strTrim = String[protoProp].trim || function () {\n        return this.replace(/^\\s+|\\s+$/g, \"\");\n      }\n      , arrIndexOf = Array[protoProp].indexOf || function (item) {\n        var\n            i = 0\n          , len = this.length\n        ;\n        for (; i < len; i++) {\n          if (i in this && this[i] === item) {\n            return i;\n          }\n        }\n        return -1;\n      }\n      // Vendors: please allow content code to instantiate DOMExceptions\n      , DOMEx = function (type, message) {\n        this.name = type;\n        this.code = DOMException[type];\n        this.message = message;\n      }\n      , checkTokenAndGetIndex = function (classList, token) {\n        if (token === \"\") {\n          throw new DOMEx(\n              \"SYNTAX_ERR\"\n            , \"An invalid or illegal string was specified\"\n          );\n        }\n        if (/\\s/.test(token)) {\n          throw new DOMEx(\n              \"INVALID_CHARACTER_ERR\"\n            , \"String contains an invalid character\"\n          );\n        }\n        return arrIndexOf.call(classList, token);\n      }\n      , ClassList = function (elem) {\n        var\n            trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n          , classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n          , i = 0\n          , len = classes.length\n        ;\n        for (; i < len; i++) {\n          this.push(classes[i]);\n        }\n        this._updateClassName = function () {\n          elem.setAttribute(\"class\", this.toString());\n        };\n      }\n      , classListProto = ClassList[protoProp] = []\n      , classListGetter = function () {\n        return new ClassList(this);\n      }\n    ;\n    // Most DOMException implementations don't allow calling DOMException's toString()\n    // on non-DOMExceptions. Error's toString() is sufficient here.\n    DOMEx[protoProp] = Error[protoProp];\n    classListProto.item = function (i) {\n      return this[i] || null;\n    };\n    classListProto.contains = function (token) {\n      token += \"\";\n      return checkTokenAndGetIndex(this, token) !== -1;\n    };\n    classListProto.add = function () {\n      var\n          tokens = arguments\n        , i = 0\n        , l = tokens.length\n        , token\n        , updated = false\n      ;\n      do {\n        token = tokens[i] + \"\";\n        if (checkTokenAndGetIndex(this, token) === -1) {\n          this.push(token);\n          updated = true;\n        }\n      }\n      while (++i < l);\n\n      if (updated) {\n        this._updateClassName();\n      }\n    };\n    classListProto.remove = function () {\n      var\n          tokens = arguments\n        , i = 0\n        , l = tokens.length\n        , token\n        , updated = false\n        , index\n      ;\n      do {\n        token = tokens[i] + \"\";\n        index = checkTokenAndGetIndex(this, token);\n        while (index !== -1) {\n          this.splice(index, 1);\n          updated = true;\n          index = checkTokenAndGetIndex(this, token);\n        }\n      }\n      while (++i < l);\n\n      if (updated) {\n        this._updateClassName();\n      }\n    };\n    classListProto.toggle = function (token, force) {\n      token += \"\";\n\n      var\n          result = this.contains(token)\n        , method = result ?\n          force !== true && \"remove\"\n        :\n          force !== false && \"add\"\n      ;\n\n      if (method) {\n        this[method](token);\n      }\n\n      if (force === true || force === false) {\n        return force;\n      } else {\n        return !result;\n      }\n    };\n    classListProto.toString = function () {\n      return this.join(\" \");\n    };\n\n    if (objCtr.defineProperty) {\n      var classListPropDesc = {\n          get: classListGetter\n        , enumerable: true\n        , configurable: true\n      };\n      try {\n        objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n      } catch (ex) { // IE 8 doesn't support enumerable:true\n        if (ex.number === -0x7FF5EC54) {\n          classListPropDesc.enumerable = false;\n          objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n        }\n      }\n    } else if (objCtr[protoProp].__defineGetter__) {\n      elemCtrProto.__defineGetter__(classListProp, classListGetter);\n    }\n\n    }(window.self));\n\n    } else {\n    // There is full or partial native classList support, so just check if we need\n    // to normalize the add/remove and toggle APIs.\n\n    (function () {\n      \"use strict\";\n\n      var testElement = document.createElement(\"_\");\n\n      testElement.classList.add(\"c1\", \"c2\");\n\n      // Polyfill for IE 10/11 and Firefox <26, where classList.add and\n      // classList.remove exist but support only one argument at a time.\n      if (!testElement.classList.contains(\"c2\")) {\n        var createMethod = function(method) {\n          var original = DOMTokenList.prototype[method];\n\n          DOMTokenList.prototype[method] = function(token) {\n            var i, len = arguments.length;\n\n            for (i = 0; i < len; i++) {\n              token = arguments[i];\n              original.call(this, token);\n            }\n          };\n        };\n        createMethod('add');\n        createMethod('remove');\n      }\n\n      testElement.classList.toggle(\"c3\", false);\n\n      // Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n      // support the second argument.\n      if (testElement.classList.contains(\"c3\")) {\n        var _toggle = DOMTokenList.prototype.toggle;\n\n        DOMTokenList.prototype.toggle = function(token, force) {\n          if (1 in arguments && !this.contains(token) === !force) {\n            return force;\n          } else {\n            return _toggle.call(this, token);\n          }\n        };\n\n      }\n\n      testElement = null;\n    }());\n  }\n}\n",
    "/*!\n  * $script.js JS loader & dependency manager\n  * https://github.com/ded/script.js\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else this[name] = definition()\n})('$script', function () {\n  var doc = document\n    , head = doc.getElementsByTagName('head')[0]\n    , s = 'string'\n    , f = false\n    , push = 'push'\n    , readyState = 'readyState'\n    , onreadystatechange = 'onreadystatechange'\n    , list = {}\n    , ids = {}\n    , delay = {}\n    , scripts = {}\n    , scriptpath\n    , urlArgs\n\n  function every(ar, fn) {\n    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f\n    return 1\n  }\n  function each(ar, fn) {\n    every(ar, function (el) {\n      return !fn(el)\n    })\n  }\n\n  function $script(paths, idOrDone, optDone) {\n    paths = paths[push] ? paths : [paths]\n    var idOrDoneIsDone = idOrDone && idOrDone.call\n      , done = idOrDoneIsDone ? idOrDone : optDone\n      , id = idOrDoneIsDone ? paths.join('') : idOrDone\n      , queue = paths.length\n    function loopFn(item) {\n      return item.call ? item() : list[item]\n    }\n    function callback() {\n      if (!--queue) {\n        list[id] = 1\n        done && done()\n        for (var dset in delay) {\n          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])\n        }\n      }\n    }\n    setTimeout(function () {\n      each(paths, function loading(path, force) {\n        if (path === null) return callback()\n        \n        if (!force && !/^https?:\\/\\//.test(path) && scriptpath) {\n          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;\n        }\n        \n        if (scripts[path]) {\n          if (id) ids[id] = 1\n          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)\n        }\n\n        scripts[path] = 1\n        if (id) ids[id] = 1\n        create(path, callback)\n      })\n    }, 0)\n    return $script\n  }\n\n  function create(path, fn) {\n    var el = doc.createElement('script'), loaded\n    el.onload = el.onerror = el[onreadystatechange] = function () {\n      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;\n      el.onload = el[onreadystatechange] = null\n      loaded = 1\n      scripts[path] = 2\n      fn()\n    }\n    el.async = 1\n    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;\n    head.insertBefore(el, head.lastChild)\n  }\n\n  $script.get = create\n\n  $script.order = function (scripts, id, done) {\n    (function callback(s) {\n      s = scripts.shift()\n      !scripts.length ? $script(s, id, done) : $script(s, callback)\n    }())\n  }\n\n  $script.path = function (p) {\n    scriptpath = p\n  }\n  $script.urlArgs = function (str) {\n    urlArgs = str;\n  }\n  $script.ready = function (deps, ready, req) {\n    deps = deps[push] ? deps : [deps]\n    var missing = [];\n    !each(deps, function (dep) {\n      list[dep] || missing[push](dep);\n    }) && every(deps, function (dep) {return list[dep]}) ?\n      ready() : !function (key) {\n      delay[key] = delay[key] || []\n      delay[key][push](ready)\n      req && req(missing)\n    }(deps.join('|'))\n    return $script\n  }\n\n  $script.done = function (idOrDone) {\n    $script([null], idOrDone)\n  }\n\n  return $script\n});\n",
    "export default class AmdResolver {\n  constructor( requireContext ) {\n    this.requireContext = requireContext;\n  }\n\n  /**\n   * @param {String} name\n   */\n  resolveAsync( name ) {\n    return new Promise( ( resolve, reject ) => {\n      this.requireContext( [ name ], resolve, reject );\n    });\n  }\n};\n",
    "export default {\n  uid: 0,\n  pending: {}\n};\n",
    "import Bundle from '../common/Bundle';\nimport loadFontAsync from './util/loadFontAsync';\nimport loadScriptAsync from './util/loadScriptAsync';\nimport loadStyleAsync from './util/loadStyleAsync';\n\nexport default class WebBundle extends Bundle {\n  static create(Bundle, deps) {\n    let bundle = new WebBundle();\n    return bundle.invoke(Bundle, deps);\n  }\n\n  static createAsync(Bundle, deps) {\n    let bundle = new WebBundle();\n    return bundle.invokeAsync(Bundle, deps);\n  }\n\n  /**\n   * @param {ScriptParams} script\n   * @returns {Promise.<*>}\n   */\n  loadScriptAsync( script ) {\n    return loadScriptAsync( script );\n  }\n\n  /**\n   * @param {StyleParams} style\n   * @returns {Promise}\n   */\n  loadStyleAsync( style ) {\n    return loadStyleAsync( style );\n  }\n\n  /**\n   * @param {FontParams} font\n   * @returns {Promise}\n   */\n  async loadFontAsync( font ) {\n    var webFont = ( await this.resolveAsync( 'webfont?' ) ) || window.WebFont;\n    if ( !webFont ) {\n      webFont = await this.loadScriptAsync({\n        url: 'https://ajax.googleapis.com/ajax/libs/webfont/1.5.18/webfont.js',\n        get: () => window.WebFont\n      });\n    }\n    await loadFontAsync( webFont, font );\n  }\n\n  /**\n   * @param {String} name\n   * @param {FontParams} font\n   */\n  registerFont( name, font ) {\n    this._registerFont( name, font, false );\n  }\n\n  /**\n   * @param {String} name\n   * @param {FontParams} font\n   */\n  registerInternalFont( name, font ) {\n    this._registerFont( name, font, true );\n  }\n\n  /**\n   * @param {String} name\n   * @param {ScriptParams} script\n   */\n  registerScript( name, script ) {\n    this._registerScript( name, script, false );\n  }\n\n  /**\n   * @param {String} name\n   * @param {ScriptParams} script\n   */\n  registerInternalScript( name, script ) {\n    this._registerScript( name, script, true );\n  }\n\n  /**\n   * @param {String} name\n   * @param {StyleParams} style\n   */\n  registerStyle( name, style ) {\n    this._registerStyle( name, style, false );\n  }\n\n  /**\n   * @param {String} name\n   * @param {StyleParams} style\n   */\n  registerInternalStyle( name, style ) {\n    this._registerStyle( name, style, true );\n  }\n\n  /**\n   * @param {String} name\n   * @param {StyleParams} style\n   * @param {Boolean} isInternal\n   */\n  _registerStyle( name, style, isInternal ) {\n    var promise;\n    this.registerAsyncResolver({\n      resolveAsync: async ( target ) => {\n        if ( name === target ) {\n          if ( !promise ) {\n            promise = this.loadStyleAsync( style ).then( () => {\n              this.register( name );\n              return () => {};\n            });\n          }\n          return promise;\n        }\n      }\n    }, isInternal );\n  }\n\n  /**\n   * @param {String} name\n   * @param {ScriptParams} script\n   * @param {Boolean} isInternal\n   */\n  _registerScript( name, script, isInternal ) {\n    var promise;\n    this.registerAsyncResolver({\n      resolveAsync: async ( target ) => {\n        if ( name === target ) {\n          if ( !promise ) {\n            promise = this.loadScriptAsync( script ).then( instance => {\n              this.register( name, instance );\n              return () => instance;\n            });\n          }\n          return promise;\n        }\n      }\n    }, isInternal );\n  }\n\n  /**\n   * @param {String} name\n   * @param {FontParams} font\n   * @param {Boolean} isInternal\n   */\n  _registerFont( name, font, isInternal ) {\n    var promise;\n    this.registerAsyncResolver({\n      resolveAsync: async ( target ) => {\n        if ( name === target ) {\n          if ( !promise ) {\n            promise = this.loadFontAsync( font ).then( () => {\n              this.register( name );\n              return () => {};\n            });\n          }\n          return promise;\n        }\n      }\n    }, isInternal );\n  }\n};\n",
    "import 'classlist-polyfill';\n\nexport * from '../common';\nexport WebBundle from './WebBundle';\nexport AmdResolver from './AmdResolver';\n",
    "/**\n * @param {String} name\n * @returns {Boolean}\n */\nexport default function( name, testString ) {\n  var elem = document.createElement( 'div' );\n  var text = document.createTextNode( testString || 'BESbswy' );\n  elem.appendChild( text );\n  elem.style.position = 'absolute';\n  elem.style.top = '0';\n  elem.style.left = '-9999px';\n  elem.style.fontFamily = 'monospace';\n  elem.style.fontSize = '72px';\n  document.body.appendChild( elem );\n  var width1 = elem.offsetWidth;\n  elem.style.fontFamily = `'${ name }', monospace`;\n  var width2 = elem.offsetWidth;\n  document.body.removeChild( elem );\n  return width1 !== width2;\n};\n",
    "/**\n * @param {String} family\n * @returns {String|null}\n */\nexport default function( family ) {\n  var link = document.querySelector( `link[href$=\"${ family }\"]` );\n  return link && link.href;\n};\n",
    "import fontIsLoaded from './fontIsLoaded';\nimport hrefForGoogleFont from './hrefForGoogleFont';\nimport moveStyleToTop from './moveStyleToTop';\n\n/**\n * @param {WebFont} webFont\n * @param {FontParams} font\n * @returns {Promise}\n */\nexport default async function( webFont, font ) {\n  if ( !fontIsLoaded( font.name, font.testString ) ) {\n    await new Promise( resolve => {\n      var url;\n      var family = font.family || font.name;\n      var config = {\n        [ font.provider ]: {\n          families: [ family ]\n        },\n        active: () => {\n          if ( !fontIsLoaded( font.name, font.testString ) ) {\n            console.warn(\n              `A font was successfully loaded, but the font could not be ` +\n              `detected. Perhaps the font name \"${ font.name }\" is wrong?`\n            );\n          }\n          switch ( font.provider ) {\n            case 'custom':\n              moveStyleToTop( url, font.order );\n              break;\n            case 'google':\n              let href = hrefForGoogleFont( family.replace( / /g, '+' ) );\n              if ( href ) {\n                moveStyleToTop( href, font.order );\n              }\n              break;\n          }\n          resolve();\n        }\n      };\n      if ( font.provider === 'custom' ) {\n        url = typeof font.url === 'function' ? font.url() : font.url;\n        config.custom.urls = [ url ];\n        config.custom.testStrings = {\n          [ font.name ]: font.testString\n        };\n      }\n      webFont.load( config );\n    });\n  }\n};\n",
    "import loadScript from 'scriptjs';\nimport GLOBAL from '../GLOBAL';\n\n/**\n * @param {ScriptParams} script\n * @returns {Promise}\n */\nexport default async function( script ) {\n  var instance;\n  try {\n    instance = script.get();\n  } catch ( err ) {}\n  if ( !instance ) {\n    let url = typeof script.url === 'function' ? script.url() : script.url;\n    if ( !GLOBAL.pending[ url ] ) {\n      GLOBAL.pending[ url ] = new Promise( resolve => {\n        if ( script.callback ) {\n          let callbackName = 'arceus_callback_' + ( ++GLOBAL.uid );\n          window[ callbackName ] = () => {\n            delete window[ callbackName ];\n            resolve();\n          };\n          loadScript( url + '&callback=' + callbackName );\n        } else {\n          loadScript( url, () => {\n            resolve();\n          });\n        }\n      });\n    }\n    await GLOBAL.pending[ url ];\n    delete GLOBAL.pending[ url ];\n    instance = script.get();\n    if ( !instance ) {\n      throw new Error(\n        `A script was loaded successfully from ${ url }, but the ` +\n        `module returned undefined. Perhaps the 'get' function is wrong?`\n      );\n    }\n  }\n  if ( typeof script.initAsync === 'function' ) {\n    let result = await script.initAsync( instance );\n    if ( result !== undefined ) {\n      instance = result;\n    }\n  }\n  return instance;\n};\n",
    "/**\n * @param {String} url\n * @param {Function} success\n */\nexport default function( url, success ) {\n  var link = document.createElement( 'link' );\n  link.href = url;\n  link.rel = 'stylesheet';\n  link.type = 'text/css';\n  link.onload = () => {\n    link.onload = null;\n    success();\n  };\n  document.head.appendChild( link );\n};\n",
    "import GLOBAL from '../GLOBAL';\nimport loadStyle from './loadStyle';\nimport moveStyleToTop from './moveStyleToTop';\nimport styleIsLoaded from './styleIsLoaded';\n\n/**\n * @param {StyleParams} style\n * @returns {Promise}\n */\nexport default async function( style ) {\n  if ( !style.match || !styleIsLoaded( style.match ) ) {\n    var url = typeof style.url === 'function' ? style.url() : style.url;\n    if ( !GLOBAL.pending[ url ] ) {\n      GLOBAL.pending[ url ] = new Promise( resolve => {\n        loadStyle( url, () => {\n          if ( style.match && !styleIsLoaded( style.match ) ) {\n            console.warn(\n              `A style was successfully loaded from ${ url }, but the ` +\n              `match expression returned false.`\n            );\n          }\n          moveStyleToTop( url, style.order );\n          resolve();\n        });\n      });\n    }\n    await GLOBAL.pending[ url ];\n    delete GLOBAL.pending[ url ];\n  }\n};\n",
    "/**\n * Moves the stylesheet with the specified href to the top of the cascade.\n * @param {String} href\n * @param {Number} [order]\n */\nexport default function( href, order ) {\n  order = order || 0;\n  var style = queryFirst( `link[href='${ href }'][rel=stylesheet]` );\n  style.setAttribute( 'data-order', order );\n  if ( order === 0 ) {\n    insertBefore( style, queryFirst( `link[rel=stylesheet]:not([href='${ href }'])` ) );\n  } else {\n    var stylesWithOrder = queryAll( `link[rel=stylesheet][data-order]:not([href='${ href }'])` );\n    if ( stylesWithOrder.length > 0 ) {\n      var stylesThatComeLater = filter(\n        stylesWithOrder,\n        x => parseInt( x.getAttribute( 'data-order' ), 10 ) > order\n      );\n      if ( stylesThatComeLater.length > 0 ) {\n        insertBefore( style, first( stylesThatComeLater ) );\n      } else {\n        insertAfter( style, last( stylesWithOrder ) );\n      }\n    } else {\n      insertBefore( style, queryFirst( `link[rel=stylesheet]:not([href='${ href }'])` ) );\n    }\n  }\n};\n\n/**\n * @param {Node} newNode\n * @param {Node} referenceNode\n */\nfunction insertBefore( newNode, referenceNode ) {\n  referenceNode.parentNode.insertBefore( newNode, referenceNode );\n}\n\n/**\n * @param {Node} newNode\n * @param {Node} referenceNode\n */\nfunction insertAfter( newNode, referenceNode ) {\n  referenceNode.parentNode.insertBefore( newNode, referenceNode.nextSibling );\n}\n\n/**\n * @param {Array} array\n * @returns {*}\n */\nfunction first( array ) {\n  return array[0];\n}\n\n/**\n * @param {Array} array\n * @returns {*}\n */\nfunction last( array ) {\n  return array[ array.length - 1 ];\n}\n\n/**\n * @param {ArrayLike} array\n * @returns {Array}\n */\nfunction filter( array, callback ) {\n  return Array.prototype.filter.call( array, callback );\n}\n\n/**\n * @param {String} selector\n * @returns {Element}\n */\nfunction queryFirst( selector ) {\n  return document.querySelector( selector );\n}\n\n/**\n * @param {String} selector\n * @returns {NodeList}\n */\nfunction queryAll( selector ) {\n  return document.querySelectorAll( selector );\n}\n",
    "/**\n * @param {MatchParams} match\n * @returns {Boolean}\n */\nexport default function( match ) {\n  var elem = document.createElement( 'div' );\n  elem.style.position = 'absolute';\n  elem.style.top = '0';\n  elem.style.left = '-9999px';\n  match.classList.forEach( className => elem.classList.add( className ) );\n  document.body.appendChild( elem );\n  var style = window.getComputedStyle( elem );\n  var result = true;\n  for ( let prop in match.props ) {\n    if ( style.getPropertyValue( prop ) !== match.props[ prop ] ) {\n      result = false;\n      break;\n    }\n  }\n  document.body.removeChild( elem );\n  return result;\n};\n",
    "import Kernel from './Kernel';\nimport arrayFromTarget from './util/arrayFromTarget';\n\nexport default class Bundle {\n  constructor( name ) {\n    this.name = name;\n    this._kernel = new Kernel();\n    this._modules = [];\n  }\n\n  get resolvers() {\n    return this._kernel.resolvers;\n  }\n\n  get asyncResolvers() {\n    return this._kernel.asyncResolvers;\n  }\n\n  get redirects() {\n    return this._kernel.redirects;\n  }\n\n  get localResolvers() {\n    return this._kernel.localResolvers;\n  }\n\n  listModules() {\n    return this._modules.slice();\n  }\n\n  register( name, value ) {\n    this._kernel.register( name, value );\n  }\n\n  registerLazy( name, value ) {\n    this._kernel.registerLazy( name, value );\n  }\n\n  registerFactory( name, factory ) {\n    this._kernel.registerFactory( name, factory );\n  }\n\n  registerFactoryAsSingleton( name, factory ) {\n    this._kernel.registerFactoryAsSingleton( name, factory );\n  }\n\n  registerAsyncFactoryAsSingleton( name, factory ) {\n    this._kernel.registerAsyncFactoryAsSingleton( name, factory );\n  }\n\n  resolve( name ) {\n    return this._kernel.resolve( name );\n  }\n\n  resolveAsync( name ) {\n    return this._kernel.resolveAsync( name );\n  }\n\n  invoke( name, target, locals ) {\n    return this._kernel.invoke( name, target, locals );\n  }\n\n  invokeAsync( name, target, locals ) {\n    return this._kernel.invokeAsync( name, target, locals );\n  }\n\n  registerModules(\n    modules,\n    {\n      ignore = [],\n      asyncModules = false,\n      namespace = '',\n      transform = null,\n      transformAsync = null\n    } = {}\n  ) {\n    for ( let key in modules ) {\n      try {\n        // Skip ignored paths.\n        let skip = false;\n        if ( ignore instanceof RegExp ) {\n          skip = ignore.test( key );\n        } else {\n          for ( let path of ignore ) {\n            if ( /\\/$/.test( path ) ) {\n              if ( key.startsWith( path ) ) {\n                skip = true;\n                break;\n              }\n            } else {\n              if ( key === path ) {\n                skip = true;\n                break;\n              }\n            }\n          }\n        }\n        if ( skip ) {\n          continue;\n        }\n\n        let segments = key.split( '/' );\n        let fullName = namespace + key;\n        let shortName = segments[ segments.length - 1 ];\n\n        let factory = modules[ key ];\n\n        let f = arrayFromTarget( modules[ key ] );\n        let deps = f.slice( 0, f.length - 1 );\n        f = f[ f.length - 1 ];\n\n        if ( asyncModules ) {\n          let t = transformAsync || transform;\n          if ( t ) {\n            factory = [ ...deps, ( ...args ) =>\n              Promise.resolve()\n                .then( () => f.apply( undefined, args ) )\n                .then( instance => t({ name: key, instance }) )\n            ];\n          }\n        } else if ( transform ) {\n          factory = [ ...deps, ( ...args ) =>\n            transform({\n              name: key,\n              instance: f.apply( undefined, args )\n            })\n          ]\n        }\n\n\n          if ( asyncModules ) {\n            this._kernel.registerAsyncFactoryAsSingleton( fullName, factory );\n          } else {\n            this._kernel.registerFactoryAsSingleton( fullName, factory );\n          }\n\n\n        // Mimic the node convention where requiring a directory requires the\n        // index file.\n        if ( key.endsWith( '/index' ) ) {\n          this._kernel.registerAlias( fullName.replace( /\\/index$/, '' ), fullName );\n        }\n\n        // Modules that begin with '_' are treated as internal modules, meaning\n        // they cannot be resolved from the kernel directly.\n\n        // In other words, when we register a module that begins with '_' like\n        // '_Foo', register an alias 'Foo' -> '_Foo', but only enable the alias\n        // when the module is being resolved as a dependency of another module\n        // within the kernel. This means when we try to do a\n        // kernel.resolve( 'Foo' ), we get a ServiceNotFoundError, but if we have\n        // a service 'Bar' that depends on 'Foo', the resolution works.\n\n        if ( /^_/.test( shortName ) ) {\n          let segs = segments.slice();\n          segs.pop();\n          segs.push( shortName.substr( 1 ) );\n          let preferredName = namespace + segs.join( '/' );\n          this._kernel.redirects.push({\n            redirect( name, namedNode ) {\n              if ( namedNode && namedNode.isChildNode && name === preferredName ) {\n                return fullName;\n              }\n            }\n          });\n        }\n\n        this._modules.push( fullName );\n\n      } catch( err ) {\n        throw new Error( `Module registration failed for \"${ key }\" because [${ err.message }]` );\n      }\n    }\n  }\n\n  /**\n   * @param {String} fromNamespace\n   * @param {Bundle} toBundle\n   * @param {String} [toNamespace=\"\"]\n   */\n  registerLink( fromNamespace, toBundle, toNamespace = '' ) {\n    this._registerLink( fromNamespace, toBundle, toNamespace, false );\n  }\n\n  /**\n   * @param {String} fromNamespace\n   * @param {Bundle} toBundle\n   * @param {String} [toNamespace=\"\"]\n   */\n  registerInternalLink( fromNamespace, toBundle, toNamespace = '' ) {\n    this._registerLink( fromNamespace, toBundle, toNamespace, true );\n  }\n\n  /**\n   * @param {String} fromNamespace\n   * @param {function(): Bundle} toBundleFactory\n   * @param {String} [toNamespace=\"\"]\n   */\n  registerLinkFactory( fromNamespace, toBundleFactory, toNamespace = '' ) {\n    return this._registerLinkFactory( fromNamespace, toBundleFactory, toNamespace, false );\n  }\n\n  /**\n   * @param {String} fromNamespace\n   * @param {function(): Bundle} toBundleFactory\n   * @param {String} [toNamespace=\"\"]\n   */\n  registerInternalLinkFactory( fromNamespace, toBundleFactory, toNamespace = '' ) {\n    return this._registerLinkFactory( fromNamespace, toBundleFactory, toNamespace, true );\n  }\n\n  /**\n   * @param {String} fromNamespace\n   * @param {function(): Promise.<Bundle>} toBundleAsyncFactory\n   * @param {String} [toNamespace=\"\"]\n   */\n  registerAsyncLinkFactory( fromNamespace, toBundleAsyncFactory, toNamespace = '' ) {\n    this._registerAsyncLinkFactory( fromNamespace, toBundleAsyncFactory, toNamespace, false );\n  }\n\n  /**\n   * @param {String} fromNamespace\n   * @param {function(): Promise.<Bundle>} toBundleAsyncFactory\n   * @param {String} [toNamespace=\"\"]\n   */\n  registerInternalAsyncLinkFactory( fromNamespace, toBundleAsyncFactory, toNamespace = '' ) {\n    this._registerAsyncLinkFactory( fromNamespace, toBundleAsyncFactory, toNamespace, true );\n  }\n\n  /**\n   * @param {String} name\n   * @param {Bundle} toBundle\n   * @param {String} [toName]\n   */\n  delegate( name, toBundle, toName ) {\n    this._delegate( name, toBundle, toName || name, false );\n  }\n\n  /**\n   * @param {String} name\n   * @param {Bundle} toBundle\n   * @param {String} [toName]\n   */\n  delegateInternal( name, toBundle, toName ) {\n    this._delegate( name, toBundle, toName || name, true );\n  }\n\n  registerResolver( resolver, isInternal ) {\n    this.resolvers.push({\n      resolve: ( name, namedNode ) => {\n        if ( !isInternal || namedNode && namedNode.isChildNode ) {\n          return resolver.resolve( name, namedNode );\n        }\n      }\n    });\n  }\n\n  registerAsyncResolver( resolver, isInternal ) {\n    this.asyncResolvers.push({\n      resolveAsync: async ( name, namedNode ) => {\n        if ( !isInternal || namedNode && namedNode.isChildNode ) {\n          return resolver.resolveAsync( name, namedNode );\n        }\n      }\n    });\n  }\n\n  /**\n   * @param {String} fromNamespace\n   * @param {Bundle} toBundle\n   * @param {String} toNamespace\n   * @param {Boolean} isInternal\n   */\n  _registerLink( fromNamespace, toBundle, toNamespace, isInternal ) {\n    this.registerResolver({\n      resolve: ( name ) => {\n        if ( name.startsWith( fromNamespace ) ) {\n          return toBundle._kernel.factoryFor(\n            toNamespace +\n            name.substr( fromNamespace.length )\n          );\n        }\n      }\n    }, isInternal );\n    this.registerAsyncResolver({\n      resolveAsync: async ( name ) => {\n        if ( name.startsWith( fromNamespace ) ) {\n          return toBundle._kernel.factoryForAsync(\n            toNamespace +\n            name.substr( fromNamespace.length )\n          );\n        }\n      }\n    }, isInternal );\n  }\n\n  /**\n   * @param {String} fromNamespace\n   * @param {function(): Bundle} toBundleFactory\n   * @param {String} toNamespace\n   * @param {Boolean} isInternal\n   */\n  _registerLinkFactory( fromNamespace, toBundleFactory, toNamespace, isInternal ) {\n    let bundle;\n    this.registerResolver({\n      resolve: ( name ) => {\n        if ( name.startsWith( fromNamespace ) ) {\n          if (!bundle) {\n            bundle = toBundleFactory();\n          }\n          return bundle._kernel.factoryFor(\n            toNamespace +\n            name.substr( fromNamespace.length )\n          );\n        }\n      }\n    }, isInternal );\n    this.registerAsyncResolver({\n      resolveAsync: async ( name ) => {\n        if ( name.startsWith( fromNamespace ) ) {\n          if (!bundle) {\n            bundle = toBundleFactory();\n          }\n          return bundle._kernel.factoryForAsync(\n            toNamespace +\n            name.substr( fromNamespace.length )\n          );\n        }\n      }\n    }, isInternal );\n  }\n\n  /**\n   * @param {String} fromNamespace\n   * @param {function(): Promise.<Bundle>} toBundleAsyncFactory\n   * @param {String} toNamespace\n   * @param {Boolean} isInternal\n   */\n  _registerAsyncLinkFactory( fromNamespace, toBundleAsyncFactory, toNamespace, isInternal ) {\n    let bundle;\n    this.registerAsyncResolver({\n      resolveAsync: async ( name ) => {\n        if ( name.startsWith( fromNamespace ) ) {\n          if (!bundle) {\n            bundle = await toBundleAsyncFactory();\n          }\n          return bundle._kernel.factoryForAsync(\n            toNamespace +\n            name.substr( fromNamespace.length )\n          );\n        }\n      }\n    }, isInternal );\n  }\n\n  /**\n   * @param {String} name\n   * @param {Bundle} toBundle\n   * @param {String} toName\n   * @param {Boolean} isInternal\n   */\n  _delegate( name, toBundle, toName, isInternal ) {\n    var key = `_${ name }`;\n    this._kernel.registerFactory( name, [ key, x => x ] );\n    this.registerResolver({\n      resolve: ( target ) => {\n        if ( key === target ) {\n          return toBundle._kernel.factoryFor( toName );\n        }\n      }\n    }, isInternal );\n    this.registerAsyncResolver({\n      resolveAsync: async ( target ) => {\n        if ( key === target ) {\n          return toBundle._kernel.factoryForAsync( toName );\n        }\n      }\n    });\n  }\n};\n",
    "export default class Component {\n\n  /**\n   * @param {Recipe} recipe\n   */\n  constructor( recipe ) {\n\n    /**\n     * @type {Recipe}\n     */\n    this.recipe = recipe.clone();\n\n    /**\n     * @type {Component}\n     */\n    this.parent = null;\n\n    /**\n     * @type {Number}\n     */\n    this.order = null;\n\n    /**\n     * @type {Array.<Component>}\n     */\n    this.children = [];\n\n    /**\n     * @type {Array}\n     */\n    this.prep = [];\n  }\n};\n",
    "export default class InvalidOperationError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'InvalidOperationError';\n    this.message = message;\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = (new Error(message)).stack;\n    }\n  }\n}\n",
    "import LazyResolver from './LazyResolver';\nimport Linker from './Linker';\nimport OptionalResolver from './OptionalResolver';\nimport OptionalLocalResolver from './OptionalLocalResolver';\nimport Recipe from './Recipe';\nimport Registry from './Registry';\nimport {\n  arrayFromTarget,\n  matchFromPattern,\n  recipeFromTarget,\n  validateTarget\n} from './util';\n\nexport default class Kernel {\n  constructor() {\n    this._registry = new Registry();\n    this._linker = new Linker();\n    this._linker.delegate = this._registry;\n    this._registry.resolvers.push( new LazyResolver( this ) );\n    this._registry.resolvers.push( new OptionalResolver( this ) );\n    this._registry.asyncResolvers.push( new OptionalResolver( this ) );\n    this.localResolvers = [ new OptionalLocalResolver( this ) ];\n  }\n\n  /**\n   * @returns {Array.<ResolveHandler>}\n   */\n  get resolvers() {\n    return this._registry.resolvers;\n  }\n\n  /**\n   * @param {Array.<ResolveHandler>} value\n   */\n  set resolvers( value ) {\n    this._registry.resolvers = value;\n  }\n\n  /**\n   * @returns {Array.<AsyncResolveHandler}\n   */\n  get asyncResolvers() {\n    return this._registry.asyncResolvers;\n  }\n\n  /**\n   * @param {Array.<AsyncResolveHandler} value\n   */\n  set asyncResolvers( value ) {\n    this._registry.asyncResolvers = value;\n  }\n\n  /**\n   * @returns {Array.<RedirectHandler}\n   */\n  get redirects() {\n    return this._registry.redirects;\n  }\n\n  /**\n   * @param {Array.<RedirectHandler} value\n   */\n  set redirects( value ) {\n    this._registry.redirects = value;\n  }\n\n  /**\n   * Resolves a named service.\n   * @param {String} name\n   * @returns {*}\n   */\n  resolve( name ) {\n    return this.invoke([ name, dep => dep ]);\n  }\n\n  /**\n   * Resolves a named service asynchronously.\n   * @param {String} name\n   * @returns {Promise}\n   */\n  resolveAsync( name ) {\n    return this.invokeAsync([ name, dep => dep ]);\n  }\n\n  /**\n   * Invokes a target, optionally specifying the name of the target.\n   *\n   * Targets can be named or unnamed. Targets can reference other targets by\n   * name, registered or unregistered, and they can also contain inline targets.\n   * When a target's dependency targets are resolved, its name is made available\n   * to the dependency resolvers.\n   *\n   * @param {String} [name] Optional name of the target.\n   * @param {Target} target\n   * @param {Object.<String, *>} [locals]\n   * @returns {*}\n   */\n  invoke( name, target, locals ) {\n    return this.factoryFrom( name, target, locals )();\n  }\n\n  /**\n   * Invokes the target as a child node.\n   *\n   * What is a child node? Let's say we have a target 'A' which has a dependency\n   * 'B' which has its own dependency 'C'. The object graph would look like\n   * this: A > B > C. In this case, A is the top level node while and B and C\n   * are both child nodes. Defining this distinction between top level and child\n   * allows us to write different rules for resolving each. For example, we\n   * might want the ability to have private modules. With this distinction, we\n   * can easily write a rule that says, \"If module X is a top level node, hide\n   * all resolutions whose names begin with an underscore (_).\"\n   *\n   * Invoking a target as a child allows us to invoke B without having any\n   * knowledge of A. In other words, it allows us to resolve a target as if it\n   * were a child node rather than a top level node.\n   *\n   * @param {String} [name] Optional name of the target.\n   * @param {Target} target\n   * @param {Object.<String, *>} [locals]\n   * @returns {*}\n   */\n  invokeChild( name, target, locals ) {\n    return this.factoryFromChild( name, target, locals )();\n  }\n\n  /**\n   * @param {String} [name] Optional name of the target.\n   * @param {Target} target\n   * @param {Object.<String, *>} [locals]\n   * @returns {Promise.<*>}\n   */\n  invokeAsync( name, target, locals ) {\n    return this.factoryFromAsync( name, target, locals )\n      .then( factory => factory() );\n  }\n\n  /**\n   * Invokes the target as a child node asynchronously.\n   * @param {String} [name] Optional name of the target.\n   * @param {Target} target\n   * @param {Object.<String, *>} [locals]\n   * @returns {Promise.<*>}\n   */\n  invokeChildAsync( name, target, locals ) {\n    return this.factoryFromChildAsync( name, target, locals )\n      .then( factory => factory() );\n  }\n\n  /**\n   * @param {String} [name] Optional name of the target.\n   * @param {Target} target\n   * @param {Object.<String, *>} [locals]\n   * @returns {Function}\n   */\n  factoryFrom( name, target, locals ) {\n    return this._linker.factoryFromRecipe(\n      this._recipeFromArgs( name, target, locals )\n    );\n  }\n\n  /**\n   * @param {String} [name] Optional name of the target.\n   * @param {Target} target\n   * @param {Object.<String, *>} [locals]\n   * @returns {Promise.<Function>}\n   */\n  factoryFromAsync( name, target, locals ) {\n    return this._linker.factoryFromRecipeAsync(\n      this._recipeFromArgs( name, target, locals )\n    );\n  }\n\n  factoryFromChild( name, target, locals ) {\n    return this._linker.factoryFromRecipe(\n      this._childRecipeFromArgs( name, target, locals )\n    );\n  }\n\n  factoryFromChildAsync( name, target, locals ) {\n    return this._linker.factoryFromRecipeAsync(\n      this._childRecipeFromArgs( name, target, locals )\n    );\n  }\n\n  /**\n   * @param {String} name\n   * @returns {Function}\n   */\n  factoryFor( name ) {\n    return this.factoryFrom([ name, dep => dep ]);\n  }\n\n  /**\n   * @param {String} name\n   * @returns {Promise.<Function>}\n   */\n  factoryForAsync( name ) {\n    return this.factoryFromAsync([ name, dep => dep ]);\n  }\n\n  /**\n   * Registers a value with the kernel.\n   * @param {String} name\n   * @param {*} value\n   */\n  register( name, value ) {\n    this.registerFactory( name, () => value );\n  }\n\n  registerLazy( name, value ) {\n    this.registerAsyncFactoryAsSingleton( name, () => value );\n  }\n\n  /**\n   * Unregisters a name from the kernel.\n   * @param {String} name\n   */\n  unregister( name ) {\n    delete this._registry.targets[ name ];\n    delete this._registry.asyncTargets[ name ];\n  }\n\n  /**\n   * Registers a factory with the kernel.\n   * @param {String} name\n   * @param {Target} factory\n   */\n  registerFactory( name, factory ) {\n    validateTarget( factory );\n    this._registry.targets[ name ] = factory;\n  }\n\n  /**\n   * Registers a factory with the kernel who's value will be cached for all\n   * future requests.\n   * @param {String} name\n   * @param {Target} factory\n   */\n  registerFactoryAsSingleton( name, factory ) {\n    validateTarget( factory );\n    this._registry.targets[ name ] = this._singletonFactory( factory );\n  }\n\n  /**\n   * Registers an async factory with the kernel.\n   * @param {String} name\n   * @param {AsyncFactory} factory\n   */\n  registerAsyncFactory( name, factory ) {\n    validateTarget( factory );\n    this._registry.asyncTargets[ name ] = this._asyncFactory( name, factory );\n  }\n\n  /**\n   * Registers an async factory as an async delegate.\n   * @param {String} name\n   * @param {AsyncFactory} factory\n   */\n  registerAsyncFactoryAsSingleton( name, factory ) {\n    validateTarget( factory );\n    factory = this._asyncFactory( name, factory );\n    var instance;\n    this._registry.asyncTargets[ name ] = () => {\n      if ( instance === undefined ) {\n        instance = factory();\n      }\n      return instance;\n    };\n  }\n\n  /**\n   * Registers an alias.\n   * @param {String} name\n   * @param {String} originalName\n   */\n  registerAlias( aliasName, originalName ) {\n    this._registry.redirects.push({\n      redirect( name ) {\n        if ( name === aliasName ) {\n          return originalName;\n        }\n      }\n    });\n  }\n\n  /**\n   * Registers a resolver.\n   * @param {Pattern} pattern\n   * @param {ResolveHandler} handler\n   */\n  delegate( pattern, handler ) {\n    var match = matchFromPattern( pattern );\n    this._registry.resolvers.push({\n      resolve( name, namedNode ) {\n        if ( match( name ) ) {\n          return handler( name, namedNode );\n        }\n      }\n    });\n  }\n\n  /**\n   * Registers an async resolver.\n   * @param {Pattern} pattern\n   * @param {AsyncResolveHandler} handler\n   */\n  delegateAsync( pattern, handler ) {\n    var match = matchFromPattern( pattern );\n    this._registry.asyncResolvers.push({\n      resolveAsync( name, namedNode ) {\n        return Promise.resolve().then( () => {\n          if ( match( name ) ) {\n            return handler( name, namedNode );\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Registers another kernel to provide resolutions for the specified\n   * namespace.\n   * @param {String} namespace\n   * @param {Kernel} kernel\n   */\n  delegateNamespace( namespace, kernel ) {\n    this._registry.resolvers.push({\n      resolve( name ) {\n        if ( name.startsWith( namespace ) ) {\n          return kernel.factoryFor( name.substr( namespace.length ) );\n        }\n      }\n    });\n    this._registry.asyncResolvers.push({\n      resolveAsync( name ) {\n        return Promise.resolve().then( () => {\n          if ( name.startsWith( namespace ) ) {\n            return kernel.factoryForAsync( name.substr( namespace.length ) );\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * @param {String} name\n   * @returns {Target|undefined}\n   */\n  targetForName( name ) {\n    return this._registry.targets[ name ];\n  }\n\n  /**\n   * @param {String} name\n   * @returns {AsyncTarget|undefined}\n   */\n  asyncTargetForName( name ) {\n    if ( this._registry.asyncTargets[ name ] ) {\n      return this._registry.asyncTargets[ name ];\n    } else if ( this._registry.targets[ name ] ) {\n      let target = this._registry.targets[ name ];\n      return () => Promise.resolve( target );\n    }\n  }\n\n  /**\n   * @param {String} [name] Optional name of the parent node.\n   * @param {Target} target\n   * @param {Object.<String, *>} [locals]\n   *   If present, dependencies are read from this object first before the\n   *   kernel is consulted.\n   * @returns {Recipe}\n   */\n  _recipeFromArgs( name, target, locals ) {\n    if ( name && typeof name !== 'string' ) {\n      locals = target;\n      target = name;\n      name = null;\n    }\n    var recipe = recipeFromTarget( target );\n    recipe.name = name || recipe.name;\n    if ( locals ) {\n      recipe.ingredients = recipe.ingredients.map( x => {\n        var local = locals[ x ];\n        if ( local === undefined ) {\n          local = this.localResolvers.reduce( ( value, handler ) => {\n            if ( value === undefined ) {\n              return handler.resolve( x, locals );\n            } else {\n              return value;\n            }\n          }, undefined );\n        }\n        if ( local !== undefined ) {\n          return () => local;\n        } else {\n          return x;\n        }\n      });\n    }\n    return recipe;\n  }\n\n  _childRecipeFromArgs( name, target, locals ) {\n    return new Recipe({\n      create: x => x,\n      ingredients: [\n        this._recipeFromArgs( name, target, locals )\n      ]\n    });\n  }\n\n  _singletonFactory( factory ) {\n    var instance;\n    var recipe = recipeFromTarget( factory );\n    return recipe.ingredients.concat( ( ...args ) => {\n      if ( instance === undefined ) {\n        instance = recipe.create.apply( undefined, args );\n      }\n      return instance;\n    });\n  }\n\n  _asyncFactory( name, factory ) {\n    var recipe = recipeFromTarget( factory );\n    return () => this.invokeChildAsync(\n      name,\n      recipe.ingredients.concat([ ( ...args ) =>\n        Promise.resolve()\n          .then( () => recipe.create.apply( undefined, args ) )\n          .then( value => () => value )\n      ])\n    );\n  }\n};\n",
    "export default class LazyResolver {\n  constructor( kernel ) {\n    this.kernel = kernel;\n    this.pattern = /\\.\\.\\.$/;\n  }\n\n  /**\n   * @param {String} name\n   * @param {NamedNode} [namedNode]\n   */\n  resolve( name, namedNode ) {\n    if ( this.pattern.test( name ) ) {\n      name = name.substr( 0, name.length - 3 );\n      var promise;\n      return () => {\n        if ( !promise ) {\n          promise = Promise.resolve();\n          let promise2;\n          // Only resolve things once the promise is awaited on.\n          promise.then = ( ...args ) => {\n            if ( !promise2 ) {\n              // Make sure we only resolve this once no matter how many times\n              // the promise is awaited on.\n              promise2 = Promise.resolve().then( () => {\n                var target = [ name, dep => dep ];\n                if ( namedNode && namedNode.isChildNode ) {\n                  return this.kernel.invokeChildAsync( namedNode.name, target );\n                } else {\n                  return this.kernel.invokeAsync( target );\n                }\n              });\n            }\n            return promise2.then.apply( promise2, args );\n          };\n        }\n        return promise;\n      };\n    }\n  }\n};\n",
    "import Recipe from './Recipe';\nimport Component from './Component';\nimport { recipeFromTarget } from './util';\nimport InvalidOperationError from './InvalidOperationError';\n\nexport default class Linker {\n  constructor() {\n    /**\n     * @type {LinkerDelegate}\n     */\n    this.delegate = null;\n  }\n\n  /**\n   * @param {Recipe} recipe\n   * @returns {Function}\n   */\n  factoryFromRecipe( recipe ) {\n    var component = this._componentFromRecipe( recipe );\n    var stack = [ component ];\n    while ( stack.length > 0 ) {\n      let component = stack.shift();\n      component.recipe.ingredients.forEach( ( ingredient, index ) => {\n        var recipe;\n        if ( typeof ingredient === 'string' ) {\n          recipe = this.delegate.recipeForName( ingredient, {\n            name: component.recipe.name,\n            isChildNode: !!component.parent\n          });\n        } else if ( ingredient instanceof Recipe ) {\n          recipe = ingredient;\n        } else {\n          recipe = recipeFromTarget( ingredient );\n        }\n        var child = this._makeChildComponent( component, recipe, index );\n        stack.push( child );\n      });\n    }\n    return this._factoryFromComponent( component );\n  }\n\n  /**\n   * @param {Recipe} recipe\n   * @returns {Promise.<Function>}\n   */\n  factoryFromRecipeAsync( recipe ) {\n    return Promise.resolve().then( () => {\n      var component = this._componentFromRecipe( recipe );\n      var resolve = component => {\n        return this.delegate.recipesByNameAsync(\n          component.recipe.ingredients.filter( x => typeof x === 'string' ),\n          {\n            name: component.recipe.name,\n            isChildNode: !!component.parent\n          }\n        ).then( recipes => {\n          return Promise.all(\n            component.recipe.ingredients.map( ( ingredient, index ) => {\n              var recipe;\n              if ( typeof ingredient === 'string' ) {\n                recipe = recipes[ ingredient ];\n              } else if ( ingredient instanceof Recipe ) {\n                recipe = ingredient;\n              } else {\n                recipe = recipeFromTarget( ingredient );\n              }\n              return this._makeChildComponent( component, recipe, index );\n            }).map( resolve )\n          );\n        });\n      };\n      return resolve( component ).then( () => {\n        return this._factoryFromComponent( component );\n      });\n    });\n  }\n\n  /**\n   * @param {Component} component\n   * @returns {Function}\n   */\n  _factoryFromComponent( component ) {\n    var components = [];\n    var stack = [ component ];\n    while ( stack.length > 0 ) {\n      let cmp = stack.shift();\n      components.push( cmp );\n      stack = stack.concat( cmp.children );\n    }\n    components.reverse().pop();\n\n    return ( ...args ) => {\n      var i = 0, len = components.length;\n      for ( ; i < len; i++ ) {\n        let cmp = components[ i ];\n        cmp.parent.prep[ cmp.order ] = cmp.recipe.create.apply( undefined, cmp.prep );\n        cmp.prep = [];\n      }\n      args = component.prep.concat( args );\n      component.prep = [];\n      return component.recipe.create.apply( undefined, args );\n    };\n  }\n\n  /**\n   * @param {Component} parent\n   * @param {Recipe} recipe\n   * @param {Number} position\n   * @returns {Component}\n   */\n  _makeChildComponent( parent, recipe, position ) {\n    var child = this._componentFromRecipe( recipe, {\n      parent: parent,\n      order: position\n    });\n    parent.children[ position ] = child;\n    this._checkForCircularDependency( child );\n    return child;\n  }\n\n  /**\n   * @param {Component} component\n   */\n  _checkForCircularDependency( component ) {\n    var node = component.parent;\n    var last = component;\n    while ( node ) {\n      if ( node.recipe.name !== null && node.recipe.name === component.recipe.name ) {\n        throw new InvalidOperationError( `Detected circular dependency to '${ component.recipe.name }' through '${ last.recipe.name }'.` );\n      }\n      last = node;\n      node = node.parent;\n    }\n  }\n\n  /**\n   * @param {Recipe} recipe\n   * @param {Object} [defaults]\n   * @returns {Component}\n   */\n  _componentFromRecipe( recipe, defaults ) {\n    var component = new Component( recipe );\n    if ( defaults ) {\n      component.parent = defaults.parent;\n      component.order = defaults.order;\n    }\n    component.recipe.ingredients = component.recipe.ingredients.map( ingredient => {\n      if ( typeof ingredient === 'string' ) {\n        return this.delegate.resolveName( ingredient, {\n          name: component.recipe.name,\n          isChildNode: !!component.parent\n        });\n      } else {\n        return ingredient;\n      }\n    });\n    return component;\n  }\n}\n",
    "export default class OptionalLocalResolver {\n  constructor( kernel ) {\n    this.kernel = kernel;\n    this.pattern = /\\?$/;\n  }\n\n  /**\n   * @param {String} name\n   * @param {Object} locals\n   */\n  resolve( name, locals ) {\n    if ( this.pattern.test( name ) ) {\n      name = name.substr( 0, name.length - 1 );\n      return locals[ name ];\n    }\n  }\n};\n",
    "export default class OptionalResolver {\n  constructor( kernel ) {\n    this.kernel = kernel;\n    this.pattern = /\\?$/;\n  }\n\n  /**\n   * @param {String} name\n   */\n  resolve( name ) {\n    if ( this.pattern.test( name ) ) {\n      name = name.substr( 0, name.length - 1 );\n      if ( this.kernel.targetForName( name ) ) {\n        return this.kernel.factoryFor( name );\n      } else {\n        return () => undefined;\n      }\n    }\n  }\n\n  resolveAsync( name ) {\n    if ( this.pattern.test( name ) ) {\n      name = name.substr( 0, name.length - 1 );\n      if ( this.kernel.asyncTargetForName( name ) ) {\n        return this.kernel.factoryForAsync( name );\n      } else {\n        return Promise.resolve( () => undefined );\n      }\n    } else {\n      return Promise.resolve();\n    }\n  }\n};\n",
    "export default class Recipe {\n  /**\n   * @param {Object} [defaults]\n   */\n  constructor( defaults ) {\n    defaults = defaults || {};\n\n    /**\n     * @type {String|null}\n     */\n    this.name = defaults.name || null;\n\n    /**\n     * @type {Function}\n     */\n    this.create = defaults.create;\n\n    /**\n     * An ingredient can be the name of a service or a factory.\n     * @type {Array.<String|Target|Recipe>}\n     */\n    this.ingredients = ( defaults.ingredients || [] ).slice();\n  }\n\n  /**\n   * @returns {Recipe}\n   */\n  clone() {\n    return new Recipe( this );\n  }\n};\n",
    "import Recipe from './Recipe';\nimport {\n  recipeFromTarget,\n  distinct,\n  validateTarget\n} from './util';\nimport ServiceNotFoundError from './ServiceNotFoundError';\nimport InvalidOperationError from './InvalidOperationError';\n\nexport default class Registry {\n  constructor() {\n    /**\n     * @type {Object.<String, Target>}\n     */\n    this.targets = {};\n\n    /**\n     * @type {Object.<String, AsyncTarget>}\n     */\n    this.asyncTargets = {};\n\n    /**\n     * @type {Array.<ResolveHandler>}\n     */\n    this.resolvers = [];\n\n    /**\n     * @type {Array.<AsyncResolveHandler}\n     */\n    this.asyncResolvers = [];\n\n    /**\n     * @type {Array.<RedirectHandler}\n     */\n    this.redirects = [];\n  }\n\n  /**\n   * @param {String} name\n   * @param {NamedNode} [namedNode]\n   * @returns {Recipe}\n   */\n  recipeForName( name, namedNode ) {\n    return this._recipeFromTarget(\n      name,\n      this._locateTarget( name, namedNode )\n    );\n  }\n\n  /**\n   * @param {Array.<String>} names\n   * @param {NamedNode} [namedNode]\n   * @returns {Promise.<Object.<String, Recipe>>}\n   */\n  recipesByNameAsync( names, namedNode ) {\n    names = distinct( names );\n    return Promise.all(\n      names.map( name => this._locateTargetAsync( name, namedNode ) )\n    ).then( targets => {\n      var recipes = {};\n      for ( let i = 0; i < names.length; i++ ) {\n        let name = names[ i ];\n        recipes[ name ] = this._recipeFromTarget( name, targets[ i ] );\n      }\n      return recipes;\n    });\n  }\n\n  /**\n   * @param {String} name\n   * @param {NamedNode} [namedNode]\n   * @returns {String}\n   */\n  resolveName( name, namedNode ) {\n    var initial = name;\n    var history = [];\n    while ( true ) {\n      if ( history.indexOf( name ) > -1 ) {\n        throw new InvalidOperationError( `Redirect loop encountered while resolving '${ name }' for '${ initial }'` );\n      } else {\n        history.push( name );\n      }\n      let result = this.redirects.reduce(\n        ( acc, handler ) => acc || handler.redirect( name, namedNode ),\n        null\n      );\n      if ( !result ) {\n        return name;\n      } else {\n        name = result;\n      }\n    }\n  }\n\n  /**\n   * Returns a new recipe by combining the first recipe with the details from\n   * the target.\n   * @param {String} name\n   * @param {Target} target\n   * @returns {Recipe}\n   */\n  _recipeFromTarget( name, target ) {\n    var { ingredients, create } = recipeFromTarget( target );\n    return new Recipe({\n      name: name,\n      create: create,\n      ingredients: ingredients\n    });\n  }\n\n  /**\n   * @param {String} name\n   * @param {NamedNode} [namedNode]\n   * @returns {Target}\n   */\n  _locateTarget( name, namedNode ) {\n    if ( this.targets[ name ] ) {\n      return this.targets[ name ];\n    }\n    var target = this.resolvers.reduce( ( target, handler ) => {\n      return target || handler.resolve( name, namedNode );\n    }, null );\n    if ( target === undefined ) {\n      let message = `Could not locate service '${ name }'`;\n      if ( namedNode && namedNode.name ) {\n        message += ` for '${ namedNode.name }'`;\n      }\n      throw new ServiceNotFoundError( message );\n    } else {\n      validateTarget( target );\n    }\n    return target;\n  }\n\n  /**\n   * @param {String} name\n   * @param {NamedNode} [namedNode]\n   * @returns {Promise.<Target>}\n   */\n  _locateTargetAsync( name, namedNode ) {\n    if ( this.asyncTargets[ name ] ) {\n      return this.asyncTargets[ name ]();\n    }\n    if ( this.targets[ name ] ) {\n      return this.targets[ name ];\n    }\n    var resolvers = this.asyncResolvers.slice();\n    var next = () => {\n      var resolver = resolvers.shift();\n      if ( resolver ) {\n        return resolver.resolveAsync( name, namedNode ).then( target => {\n          return target || next();\n        });\n      }\n    };\n    return Promise.resolve().then( next ).then( target => {\n      if ( target === undefined ) {\n        return this._locateTarget( name, namedNode );\n      } else {\n        validateTarget( target );\n      }\n      return target;\n    });\n  }\n};\n",
    "export default class ServiceNotFoundError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'ServiceNotFoundError';\n    this.message = message;\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = (new Error(message)).stack;\n    }\n  }\n}\n",
    "export Bundle from './Bundle';\nexport InvalidOperationError from './InvalidOperationError';\nexport Kernel from './Kernel';\nexport LazyResolver from './LazyResolver';\nexport ServiceNotFoundError from './ServiceNotFoundError';\n",
    "export default function( target ) {\n  var deps;\n  if ( typeof target === 'function' ) {\n    deps = target.$inject || [];\n  } else {\n    deps = target.slice();\n    target = deps.pop();\n  }\n  return deps.concat([ target ]);\n};\n",
    "/**\n * Safely combines multiple path segments.\n * @param {...String} paths\n * @returns {String}\n */\nexport default function( ...paths ) {\n  return paths.map( function( path, index ) {\n    return index === 0 ? path.replace( /\\/$/, '' ) : path.replace( /(^\\/|\\/$)/g, '' );\n  }).join( '/' );\n};\n",
    "/**\n * @param {Array} items\n * @returns {Array}\n */\nexport default function( items ) {\n  return items.reduce( ( acc, item ) => {\n    if ( acc.indexOf( item ) === -1 ) {\n      return acc.concat( [ item ] );\n    }\n    return acc;\n  }, [] );\n};\n",
    "export arrayFromTarget from './arrayFromTarget';\nexport combinePaths from './combinePaths';\nexport distinct from './distinct';\nexport matchFromPattern from './matchFromPattern';\nexport recipeFromTarget from './recipeFromTarget';\nexport validateTarget from './validateTarget';\n",
    "/**\n * @param {Pattern} pattern\n * @returns {Function}\n */\nexport default function( pattern ) {\n  if ( typeof pattern === 'function' ) {\n    return pattern;\n  }\n  if ( typeof pattern === 'string' ) {\n    return value => value === pattern;\n  }\n  return value => pattern.test( value );\n};\n",
    "import Recipe from '../Recipe';\nimport arrayFromTarget from './arrayFromTarget';\n\n/**\n * @param {Target} target\n * @returns {Recipe}\n */\nexport default function( target ) {\n  target = arrayFromTarget( target );\n  return new Recipe({\n    create: target[ target.length - 1 ],\n    ingredients: target.slice( 0, target.length - 1 )\n  });\n};\n",
    "/**\n * @param {Target} target\n */\nexport default function( target ) {\n  if ( typeof target !== 'function' ) {\n    if ( !Array.isArray( target ) ) {\n      throw new Error( 'Expected target to be an array or function.' );\n    }\n    if ( typeof target[ target.length - 1 ] !== 'function' ) {\n      throw new Error( 'The last element of an array target should be a function.' );\n    }\n  }\n};\n"
  ]
}